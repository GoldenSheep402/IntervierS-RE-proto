// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: questionnaire/v1/questionnaire_service.proto

package questionnaireV1

import (
	v1 "github.com/GoldenSheep402/InterviewS-RE-proto/gen/proto/user/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateQuestionnaireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questionnaire *Questionnaire   `protobuf:"bytes,1,opt,name=questionnaire,proto3" json:"questionnaire,omitempty"`
	Questions     []*QuestionsList `protobuf:"bytes,2,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *CreateQuestionnaireRequest) Reset() {
	*x = CreateQuestionnaireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionnaireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionnaireRequest) ProtoMessage() {}

func (x *CreateQuestionnaireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionnaireRequest.ProtoReflect.Descriptor instead.
func (*CreateQuestionnaireRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateQuestionnaireRequest) GetQuestionnaire() *Questionnaire {
	if x != nil {
		return x.Questionnaire
	}
	return nil
}

func (x *CreateQuestionnaireRequest) GetQuestions() []*QuestionsList {
	if x != nil {
		return x.Questions
	}
	return nil
}

type CreateQuestionnaireResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateQuestionnaireResponse) Reset() {
	*x = CreateQuestionnaireResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionnaireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionnaireResponse) ProtoMessage() {}

func (x *CreateQuestionnaireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionnaireResponse.ProtoReflect.Descriptor instead.
func (*CreateQuestionnaireResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{1}
}

type UpdateQuestionnaireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questionnaire *Questionnaire   `protobuf:"bytes,1,opt,name=questionnaire,proto3" json:"questionnaire,omitempty"`
	Questions     []*QuestionsList `protobuf:"bytes,2,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *UpdateQuestionnaireRequest) Reset() {
	*x = UpdateQuestionnaireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuestionnaireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionnaireRequest) ProtoMessage() {}

func (x *UpdateQuestionnaireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionnaireRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuestionnaireRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateQuestionnaireRequest) GetQuestionnaire() *Questionnaire {
	if x != nil {
		return x.Questionnaire
	}
	return nil
}

func (x *UpdateQuestionnaireRequest) GetQuestions() []*QuestionsList {
	if x != nil {
		return x.Questions
	}
	return nil
}

type UpdateQuestionnaireResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateQuestionnaireResponse) Reset() {
	*x = UpdateQuestionnaireResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuestionnaireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionnaireResponse) ProtoMessage() {}

func (x *UpdateQuestionnaireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionnaireResponse.ProtoReflect.Descriptor instead.
func (*UpdateQuestionnaireResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{3}
}

type GetQuestionnaireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireId string `protobuf:"bytes,1,opt,name=questionnaireId,proto3" json:"questionnaireId,omitempty"`
}

func (x *GetQuestionnaireRequest) Reset() {
	*x = GetQuestionnaireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireRequest) ProtoMessage() {}

func (x *GetQuestionnaireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetQuestionnaireRequest) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

type GetQuestionnaireResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questionnaire *Questionnaire   `protobuf:"bytes,1,opt,name=questionnaire,proto3" json:"questionnaire,omitempty"`
	Questions     []*QuestionsList `protobuf:"bytes,2,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetQuestionnaireResponse) Reset() {
	*x = GetQuestionnaireResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireResponse) ProtoMessage() {}

func (x *GetQuestionnaireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetQuestionnaireResponse) GetQuestionnaire() *Questionnaire {
	if x != nil {
		return x.Questionnaire
	}
	return nil
}

func (x *GetQuestionnaireResponse) GetQuestions() []*QuestionsList {
	if x != nil {
		return x.Questions
	}
	return nil
}

type SubmitAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Answers  []*Answer `protobuf:"bytes,2,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *SubmitAnswerRequest) Reset() {
	*x = SubmitAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswerRequest) ProtoMessage() {}

func (x *SubmitAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswerRequest.ProtoReflect.Descriptor instead.
func (*SubmitAnswerRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitAnswerRequest) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SubmitAnswerRequest) GetAnswers() []*Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type SubmitAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitAnswerResponse) Reset() {
	*x = SubmitAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswerResponse) ProtoMessage() {}

func (x *SubmitAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswerResponse.ProtoReflect.Descriptor instead.
func (*SubmitAnswerResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{7}
}

type GetAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireId string `protobuf:"bytes,1,opt,name=questionnaireId,proto3" json:"questionnaireId,omitempty"`
}

func (x *GetAnswerRequest) Reset() {
	*x = GetAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerRequest) ProtoMessage() {}

func (x *GetAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerRequest.ProtoReflect.Descriptor instead.
func (*GetAnswerRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetAnswerRequest) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

type GetAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *v1.User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Answers []*Answer `protobuf:"bytes,2,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *GetAnswerResponse) Reset() {
	*x = GetAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerResponse) ProtoMessage() {}

func (x *GetAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_v1_questionnaire_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerResponse.ProtoReflect.Descriptor instead.
func (*GetAnswerResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetAnswerResponse) GetUser() *v1.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetAnswerResponse) GetAnswers() []*Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

var File_questionnaire_v1_questionnaire_service_proto protoreflect.FileDescriptor

var file_questionnaire_v1_questionnaire_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52,
	0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x3d,
	0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1d, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0d, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x43, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x16, 0x0a, 0x14,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x49, 0x64, 0x22, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x32, 0xf2,
	0x05, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12,
	0x2c, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x67, 0x61, 0x70, 0x69, 0x2f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x2c,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x67, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x29, 0x2e, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x67,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x0c,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x67, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2f, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x7c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x22, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x67, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2f, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x5a, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x68, 0x65, 0x65, 0x70, 0x34, 0x30, 0x32,
	0x2f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x53, 0x2d, 0x52, 0x45, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_questionnaire_v1_questionnaire_service_proto_rawDescOnce sync.Once
	file_questionnaire_v1_questionnaire_service_proto_rawDescData = file_questionnaire_v1_questionnaire_service_proto_rawDesc
)

func file_questionnaire_v1_questionnaire_service_proto_rawDescGZIP() []byte {
	file_questionnaire_v1_questionnaire_service_proto_rawDescOnce.Do(func() {
		file_questionnaire_v1_questionnaire_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_questionnaire_v1_questionnaire_service_proto_rawDescData)
	})
	return file_questionnaire_v1_questionnaire_service_proto_rawDescData
}

var file_questionnaire_v1_questionnaire_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_questionnaire_v1_questionnaire_service_proto_goTypes = []any{
	(*CreateQuestionnaireRequest)(nil),  // 0: questionnaire.v1.CreateQuestionnaireRequest
	(*CreateQuestionnaireResponse)(nil), // 1: questionnaire.v1.CreateQuestionnaireResponse
	(*UpdateQuestionnaireRequest)(nil),  // 2: questionnaire.v1.UpdateQuestionnaireRequest
	(*UpdateQuestionnaireResponse)(nil), // 3: questionnaire.v1.UpdateQuestionnaireResponse
	(*GetQuestionnaireRequest)(nil),     // 4: questionnaire.v1.GetQuestionnaireRequest
	(*GetQuestionnaireResponse)(nil),    // 5: questionnaire.v1.GetQuestionnaireResponse
	(*SubmitAnswerRequest)(nil),         // 6: questionnaire.v1.SubmitAnswerRequest
	(*SubmitAnswerResponse)(nil),        // 7: questionnaire.v1.SubmitAnswerResponse
	(*GetAnswerRequest)(nil),            // 8: questionnaire.v1.GetAnswerRequest
	(*GetAnswerResponse)(nil),           // 9: questionnaire.v1.GetAnswerResponse
	(*Questionnaire)(nil),               // 10: questionnaire.v1.Questionnaire
	(*QuestionsList)(nil),               // 11: questionnaire.v1.QuestionsList
	(*Response)(nil),                    // 12: questionnaire.v1.Response
	(*Answer)(nil),                      // 13: questionnaire.v1.Answer
	(*v1.User)(nil),                     // 14: user.v1.User
}
var file_questionnaire_v1_questionnaire_service_proto_depIdxs = []int32{
	10, // 0: questionnaire.v1.CreateQuestionnaireRequest.questionnaire:type_name -> questionnaire.v1.Questionnaire
	11, // 1: questionnaire.v1.CreateQuestionnaireRequest.questions:type_name -> questionnaire.v1.QuestionsList
	10, // 2: questionnaire.v1.UpdateQuestionnaireRequest.questionnaire:type_name -> questionnaire.v1.Questionnaire
	11, // 3: questionnaire.v1.UpdateQuestionnaireRequest.questions:type_name -> questionnaire.v1.QuestionsList
	10, // 4: questionnaire.v1.GetQuestionnaireResponse.questionnaire:type_name -> questionnaire.v1.Questionnaire
	11, // 5: questionnaire.v1.GetQuestionnaireResponse.questions:type_name -> questionnaire.v1.QuestionsList
	12, // 6: questionnaire.v1.SubmitAnswerRequest.response:type_name -> questionnaire.v1.Response
	13, // 7: questionnaire.v1.SubmitAnswerRequest.answers:type_name -> questionnaire.v1.Answer
	14, // 8: questionnaire.v1.GetAnswerResponse.user:type_name -> user.v1.User
	13, // 9: questionnaire.v1.GetAnswerResponse.answers:type_name -> questionnaire.v1.Answer
	0,  // 10: questionnaire.v1.QuestionnaireService.CreateQuestionnaire:input_type -> questionnaire.v1.CreateQuestionnaireRequest
	2,  // 11: questionnaire.v1.QuestionnaireService.UpdateQuestionnaire:input_type -> questionnaire.v1.UpdateQuestionnaireRequest
	4,  // 12: questionnaire.v1.QuestionnaireService.GetQuestionnaire:input_type -> questionnaire.v1.GetQuestionnaireRequest
	6,  // 13: questionnaire.v1.QuestionnaireService.SubmitAnswer:input_type -> questionnaire.v1.SubmitAnswerRequest
	8,  // 14: questionnaire.v1.QuestionnaireService.GetAnswer:input_type -> questionnaire.v1.GetAnswerRequest
	1,  // 15: questionnaire.v1.QuestionnaireService.CreateQuestionnaire:output_type -> questionnaire.v1.CreateQuestionnaireResponse
	3,  // 16: questionnaire.v1.QuestionnaireService.UpdateQuestionnaire:output_type -> questionnaire.v1.UpdateQuestionnaireResponse
	5,  // 17: questionnaire.v1.QuestionnaireService.GetQuestionnaire:output_type -> questionnaire.v1.GetQuestionnaireResponse
	7,  // 18: questionnaire.v1.QuestionnaireService.SubmitAnswer:output_type -> questionnaire.v1.SubmitAnswerResponse
	9,  // 19: questionnaire.v1.QuestionnaireService.GetAnswer:output_type -> questionnaire.v1.GetAnswerResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_questionnaire_v1_questionnaire_service_proto_init() }
func file_questionnaire_v1_questionnaire_service_proto_init() {
	if File_questionnaire_v1_questionnaire_service_proto != nil {
		return
	}
	file_questionnaire_v1_questionnaire_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateQuestionnaireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateQuestionnaireResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateQuestionnaireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateQuestionnaireResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuestionnaireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuestionnaireResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_v1_questionnaire_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_questionnaire_v1_questionnaire_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_questionnaire_v1_questionnaire_service_proto_goTypes,
		DependencyIndexes: file_questionnaire_v1_questionnaire_service_proto_depIdxs,
		MessageInfos:      file_questionnaire_v1_questionnaire_service_proto_msgTypes,
	}.Build()
	File_questionnaire_v1_questionnaire_service_proto = out.File
	file_questionnaire_v1_questionnaire_service_proto_rawDesc = nil
	file_questionnaire_v1_questionnaire_service_proto_goTypes = nil
	file_questionnaire_v1_questionnaire_service_proto_depIdxs = nil
}

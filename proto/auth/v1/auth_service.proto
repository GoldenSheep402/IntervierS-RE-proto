syntax = "proto3";
package auth.v1;

import "google/api/annotations.proto";

option go_package = "github.com/GoldenSheep402/InterviewS-RE-proto/gen/proto/auth/v1;authV1";

service AuthService {
  // Register
  // Set the email as bind and personal info
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/gapi/auth/v1/register",
      body: "*"
    };
  }

  // Login
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/gapi/auth/v1/login",
      body: "*"
    };
  }

  // OauthStart
  rpc OauthStart(OauthStartRequest) returns (OauthStartResponse) {
    option (google.api.http) = {
      get: "/gapi/auth/v1/oauth"
    };
  }

  // OauthFinish
  rpc OauthFinish(OauthFinishRequest) returns (OauthFinishResponse) {
    option (google.api.http) = {
      get: "/gapi/auth/v1/oauth/callback"
    };
  }

  // RefreshToken
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/gapi/auth/v1/refreshToken"
      body: "*"
    };
  }

  // UpdateEmailLoginPassword
  // Update the password of the way of email login
  // The email are in bind table and be unique
  // If the email is not in bind table, create one
  // If exist , overwrite the password and email
  // TODO: add the email verification
  rpc UpdateEmailLoginPassword(UpdateEmailLoginPasswordRequest) returns (UpdateEmailLoginPasswordResponse) {
    option (google.api.http) = {
      post: "/gapi/auth/v1/updatePassword/email"
      body: "*"
    };
  }
}

// Register
message RegisterRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}
message RegisterResponse {}

// Login
message LoginRequest {
  string email = 1;
  string password = 2;
}
message LoginResponse {
  string accessToken = 1;
  string refreshToken = 2;
}

// OauthStart
message OauthStartRequest {}
message OauthStartResponse {
  string url = 1;
}

// OauthFinish
message OauthFinishRequest {
  string code = 1;
  string state = 2;
}
message OauthFinishResponse {
  string accessToken = 1;
  string refreshToken = 2;
}

// TokenRefresh
message RefreshTokenRequest {
  string refreshToken = 1;
}
message RefreshTokenResponse {
  string accessToken = 1;
  string refreshToken = 2;
}

// UpdateEmailLoginPassword
message UpdateEmailLoginPasswordRequest {
  string email = 1;
  string newPassword = 2;
}
message UpdateEmailLoginPasswordResponse {}